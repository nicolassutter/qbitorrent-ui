// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zBuildInfo = z.object({
    qt: z.string().optional(),
    libtorrent: z.string().optional(),
    boost: z.string().optional(),
    openssl: z.string().optional(),
    bitness: z.number().int().optional()
});

export const zPreferences = z.object({
    locale: z.string().optional(),
    create_subfolder_enabled: z.boolean().optional(),
    start_paused_enabled: z.boolean().optional(),
    auto_delete_mode: z.number().int().optional(),
    preallocate_all: z.boolean().optional(),
    incomplete_files_ext: z.boolean().optional(),
    auto_tmm_enabled: z.boolean().optional(),
    torrent_changed_tmm_enabled: z.boolean().optional(),
    save_path_changed_tmm_enabled: z.boolean().optional(),
    category_changed_tmm_enabled: z.boolean().optional(),
    save_path: z.string().optional(),
    temp_path_enabled: z.boolean().optional(),
    temp_path: z.string().optional(),
    scan_dirs: z.object({}).optional(),
    export_dir: z.string().optional(),
    export_dir_fin: z.string().optional(),
    mail_notification_enabled: z.boolean().optional(),
    mail_notification_sender: z.string().optional(),
    mail_notification_email: z.string().optional(),
    mail_notification_smtp: z.string().optional(),
    mail_notification_ssl_enabled: z.boolean().optional(),
    mail_notification_auth_enabled: z.boolean().optional(),
    mail_notification_username: z.string().optional(),
    mail_notification_password: z.string().optional(),
    autorun_enabled: z.boolean().optional(),
    autorun_program: z.string().optional(),
    queueing_enabled: z.boolean().optional(),
    max_active_downloads: z.coerce.bigint().optional(),
    max_active_torrents: z.coerce.bigint().optional(),
    max_active_uploads: z.coerce.bigint().optional(),
    dont_count_slow_torrents: z.boolean().optional(),
    slow_torrent_dl_rate_threshold: z.coerce.bigint().optional(),
    slow_torrent_ul_rate_threshold: z.coerce.bigint().optional(),
    slow_torrent_inactive_timer: z.coerce.bigint().optional(),
    max_ratio_enabled: z.boolean().optional(),
    max_ratio: z.number().optional(),
    max_ratio_act: z.unknown().optional(),
    listen_port: z.number().int().optional(),
    upnp: z.boolean().optional(),
    random_port: z.boolean().optional(),
    dl_limit: z.coerce.bigint().optional(),
    up_limit: z.coerce.bigint().optional(),
    max_connec: z.coerce.bigint().optional(),
    max_connec_per_torrent: z.coerce.bigint().optional(),
    max_uploads: z.coerce.bigint().optional(),
    max_uploads_per_torrent: z.coerce.bigint().optional(),
    stop_tracker_timeout: z.coerce.bigint().optional(),
    enable_piece_extent_affinity: z.boolean().optional(),
    bittorrent_protocol: z.unknown().optional(),
    limit_utp_rate: z.boolean().optional(),
    limit_tcp_overhead: z.boolean().optional(),
    limit_lan_peers: z.boolean().optional(),
    alt_dl_limit: z.coerce.bigint().optional(),
    alt_up_limit: z.coerce.bigint().optional(),
    scheduler_enabled: z.boolean().optional(),
    schedule_from_hour: z.number().int().optional(),
    schedule_from_min: z.number().int().optional(),
    schedule_to_hour: z.number().int().optional(),
    schedule_to_min: z.number().int().optional(),
    scheduler_days: z.unknown().optional(),
    dht: z.boolean().optional(),
    pex: z.boolean().optional(),
    lsd: z.boolean().optional(),
    encryption: z.unknown().optional(),
    anonymous_mode: z.boolean().optional(),
    proxy_type: z.unknown().optional(),
    proxy_ip: z.string().optional(),
    proxy_port: z.number().int().optional(),
    proxy_peer_connections: z.boolean().optional(),
    proxy_auth_enabled: z.boolean().optional(),
    proxy_username: z.string().optional(),
    proxy_password: z.string().optional(),
    proxy_torrents_only: z.boolean().optional(),
    ip_filter_enabled: z.boolean().optional(),
    ip_filter_path: z.string().optional(),
    ip_filter_trackers: z.boolean().optional(),
    web_ui_domain_list: z.array(z.string()).optional(),
    web_ui_address: z.string().optional(),
    web_ui_port: z.number().int().optional(),
    web_ui_upnp: z.boolean().optional(),
    web_ui_username: z.string().optional(),
    web_ui_csrf_protection_enabled: z.boolean().optional(),
    web_ui_clickjacking_protection_enabled: z.boolean().optional(),
    web_ui_secure_cookie_enabled: z.boolean().optional(),
    web_ui_max_auth_fail_count: z.coerce.bigint().optional(),
    web_ui_ban_duration: z.coerce.bigint().optional(),
    web_ui_session_timeout: z.coerce.bigint().optional(),
    web_ui_host_header_validation_enabled: z.boolean().optional(),
    bypass_local_auth: z.boolean().optional(),
    bypass_auth_subnet_whitelist_enabled: z.boolean().optional(),
    bypass_auth_subnet_whitelist: z.array(z.string()).optional(),
    alternative_webui_enabled: z.boolean().optional(),
    alternative_webui_path: z.string().optional(),
    use_https: z.boolean().optional(),
    ssl_key: z.string().optional(),
    ssl_cert: z.string().optional(),
    web_ui_https_key_path: z.string().optional(),
    web_ui_https_cert_path: z.string().optional(),
    dyndns_enabled: z.boolean().optional(),
    dyndns_service: z.unknown().optional(),
    dyndns_username: z.string().optional(),
    dyndns_password: z.string().optional(),
    dyndns_domain: z.string().optional(),
    rss_refresh_interval: z.coerce.bigint().optional(),
    rss_max_articles_per_feed: z.coerce.bigint().optional(),
    rss_processing_enabled: z.boolean().optional(),
    rss_auto_downloading_enabled: z.boolean().optional(),
    rss_download_repack_proper_episodes: z.boolean().optional(),
    rss_smart_episode_filters: z.string().optional(),
    add_trackers_enabled: z.boolean().optional(),
    add_trackers: z.string().optional(),
    web_ui_use_custom_http_headers_enabled: z.boolean().optional(),
    web_ui_custom_http_headers: z.string().optional(),
    max_seeding_time_enabled: z.boolean().optional(),
    max_seeding_time: z.coerce.bigint().optional(),
    announce_ip: z.string().optional(),
    announce_to_all_tiers: z.boolean().optional(),
    announce_to_all_trackers: z.boolean().optional(),
    async_io_threads: z.coerce.bigint().optional(),
    banned_IPs: z.string().optional(),
    checking_memory_use: z.coerce.bigint().optional(),
    current_interface_address: z.string().optional(),
    current_network_interface: z.string().optional(),
    disk_cache: z.coerce.bigint().optional(),
    disk_cache_ttl: z.coerce.bigint().optional(),
    embedded_tracker_port: z.number().int().optional(),
    enable_coalesce_read_write: z.boolean().optional(),
    enable_embedded_tracker: z.boolean().optional(),
    enable_multi_connections_from_same_ip: z.boolean().optional(),
    enable_os_cache: z.boolean().optional(),
    enable_upload_suggestions: z.boolean().optional(),
    file_pool_size: z.coerce.bigint().optional(),
    outgoing_ports_max: z.number().int().optional(),
    outgoing_ports_min: z.number().int().optional(),
    recheck_completed_torrents: z.boolean().optional(),
    resolve_peer_countries: z.boolean().optional(),
    save_resume_data_interval: z.coerce.bigint().optional(),
    send_buffer_low_watermark: z.coerce.bigint().optional(),
    send_buffer_watermark: z.coerce.bigint().optional(),
    send_buffer_watermark_factor: z.number().int().optional(),
    socket_backlog_size: z.coerce.bigint().optional(),
    upload_choking_algorithm: z.unknown().optional(),
    upload_slots_behavior: z.unknown().optional(),
    upnp_lease_duration: z.coerce.bigint().optional(),
    utp_tcp_mixed_mode: z.unknown().optional()
});

export const zSetPreferences = zPreferences.merge(z.object({
    web_ui_password: z.string().optional()
}));

export const zMainLog = z.object({
    id: z.coerce.bigint().optional(),
    message: z.string().optional(),
    timestamp: z.coerce.bigint().optional(),
    type: z.unknown().optional()
});

export const zPeersLog = z.object({
    id: z.coerce.bigint().optional(),
    ip: z.string().optional(),
    timestamp: z.coerce.bigint().optional(),
    blocked: z.boolean().optional(),
    reason: z.string().optional()
});

export const zMainData = z.object({
    rid: z.coerce.bigint().optional(),
    full_update: z.boolean().optional(),
    torrents: z.object({}).optional(),
    torrents_removed: z.array(z.string()).optional(),
    categories: z.object({}).optional(),
    categories_removed: z.array(z.string()).optional(),
    tags: z.array(z.string()).optional(),
    tags_removed: z.array(z.string()).optional(),
    server_state: z.object({
        dl_info_speed: z.coerce.bigint().optional(),
        dl_info_data: z.coerce.bigint().optional(),
        up_info_speed: z.coerce.bigint().optional(),
        up_info_data: z.coerce.bigint().optional(),
        dl_rate_limit: z.coerce.bigint().optional(),
        up_rate_limit: z.coerce.bigint().optional(),
        dht_nodes: z.coerce.bigint().optional(),
        connection_status: z.string().optional(),
        queueing: z.boolean().optional(),
        use_alt_speed_limits: z.boolean().optional(),
        refresh_interval: z.coerce.bigint().optional()
    }).optional()
});

export const zTorrentPeers = z.object({});

export const zTransferInfo = z.object({
    dl_info_speed: z.coerce.bigint().optional(),
    dl_info_data: z.coerce.bigint().optional(),
    up_info_speed: z.coerce.bigint().optional(),
    up_info_data: z.coerce.bigint().optional(),
    dl_rate_limit: z.coerce.bigint().optional(),
    up_rate_limit: z.coerce.bigint().optional(),
    dht_nodes: z.coerce.bigint().optional(),
    connection_status: z.string().optional(),
    queueing: z.boolean().optional(),
    use_alt_speed_limits: z.boolean().optional(),
    refresh_interval: z.coerce.bigint().optional()
});

export const zTorrentInfo = z.object({
    added_on: z.coerce.bigint().optional(),
    amount_left: z.coerce.bigint().optional(),
    auto_tmm: z.boolean().optional(),
    availability: z.number().optional(),
    category: z.string().optional(),
    completed: z.coerce.bigint().optional(),
    completion_on: z.coerce.bigint().optional(),
    content_path: z.string().optional(),
    dl_limit: z.coerce.bigint().optional(),
    dlspeed: z.coerce.bigint().optional(),
    downloaded: z.coerce.bigint().optional(),
    downloaded_session: z.coerce.bigint().optional(),
    eta: z.coerce.bigint().optional(),
    f_l_piece_prio: z.boolean().optional(),
    force_start: z.boolean().optional(),
    hash: z.string().optional(),
    last_activity: z.coerce.bigint().optional(),
    magnet_uri: z.string().optional(),
    max_ratio: z.number().optional(),
    max_seeding_time: z.coerce.bigint().optional(),
    name: z.string().optional(),
    num_complete: z.coerce.bigint().optional(),
    num_incomplete: z.coerce.bigint().optional(),
    num_leechs: z.coerce.bigint().optional(),
    num_seeds: z.coerce.bigint().optional(),
    priority: z.coerce.bigint().optional(),
    progress: z.number().optional(),
    ratio: z.number().optional(),
    ratio_limit: z.number().optional(),
    save_path: z.string().optional(),
    seeding_time: z.coerce.bigint().optional(),
    seeding_time_limit: z.coerce.bigint().optional(),
    seen_complete: z.coerce.bigint().optional(),
    seq_dl: z.boolean().optional(),
    size: z.coerce.bigint().optional(),
    state: z.enum([
        'error',
        'missingFiles',
        'uploading',
        'pausedUP',
        'queuedUP',
        'stalledUP',
        'checkingUP',
        'forcedUP',
        'allocating',
        'downloading',
        'metaDL',
        'pausedDL',
        'queuedDL',
        'stalledDL',
        'checkingDL',
        'forcedDL',
        'checkingResumeData',
        'moving',
        'unknown'
    ]).optional(),
    super_seeding: z.boolean().optional(),
    tags: z.string().optional(),
    time_active: z.coerce.bigint().optional(),
    total_size: z.coerce.bigint().optional(),
    tracker: z.string().optional(),
    up_limit: z.coerce.bigint().optional(),
    uploaded: z.coerce.bigint().optional(),
    uploaded_session: z.coerce.bigint().optional(),
    upspeed: z.coerce.bigint().optional()
});

export const zTorrentsProperties = z.object({
    save_path: z.string().optional(),
    creation_date: z.coerce.bigint().optional(),
    piece_size: z.coerce.bigint().optional(),
    comment: z.string().optional(),
    total_wasted: z.coerce.bigint().optional(),
    total_uploaded: z.coerce.bigint().optional(),
    total_uploaded_session: z.coerce.bigint().optional(),
    total_downloaded: z.coerce.bigint().optional(),
    total_downloaded_session: z.coerce.bigint().optional(),
    up_limit: z.coerce.bigint().optional(),
    dl_limit: z.coerce.bigint().optional(),
    time_elapsed: z.coerce.bigint().optional(),
    seeding_time: z.coerce.bigint().optional(),
    nb_connections: z.coerce.bigint().optional(),
    nb_connections_limit: z.coerce.bigint().optional(),
    share_ratio: z.number().optional(),
    addition_date: z.coerce.bigint().optional(),
    completion_date: z.coerce.bigint().optional(),
    created_by: z.string().optional(),
    dl_speed_avg: z.coerce.bigint().optional(),
    dl_speed: z.coerce.bigint().optional(),
    eta: z.coerce.bigint().optional(),
    last_seen: z.coerce.bigint().optional(),
    peers: z.coerce.bigint().optional(),
    peers_total: z.coerce.bigint().optional(),
    pieces_have: z.coerce.bigint().optional(),
    pieces_num: z.coerce.bigint().optional(),
    reannounce: z.coerce.bigint().optional(),
    seeds: z.coerce.bigint().optional(),
    seeds_total: z.coerce.bigint().optional(),
    total_size: z.coerce.bigint().optional(),
    up_speed_avg: z.coerce.bigint().optional(),
    up_speed: z.coerce.bigint().optional()
});

export const zTorrentsTrackers = z.object({
    url: z.string().optional(),
    status: z.unknown().optional(),
    tier: z.coerce.bigint().optional(),
    num_peers: z.coerce.bigint().optional(),
    num_seeds: z.coerce.bigint().optional(),
    num_leeches: z.coerce.bigint().optional(),
    num_downloaded: z.coerce.bigint().optional(),
    msg: z.string().optional()
});

export const zTorrentsWebseeds = z.object({
    url: z.string().optional()
});

export const zTorrentsFiles = z.object({
    index: z.coerce.bigint().optional(),
    name: z.string().optional(),
    size: z.coerce.bigint().optional(),
    progress: z.number().optional(),
    priority: z.unknown().optional(),
    is_seed: z.boolean().optional(),
    piece_range: z.array(z.coerce.bigint()).optional(),
    availability: z.number().optional()
});

export const zHashes = z.object({
    hashes: z.array(z.string())
});

export const zAddTorrentsUrls = z.object({
    urls: z.string()
}).merge(z.object({
    savepath: z.string().optional(),
    cookie: z.string().optional(),
    category: z.string().optional(),
    tags: z.array(z.string()).optional(),
    skip_checking: z.enum([
        'true',
        'false'
    ]).optional(),
    paused: z.enum([
        'true',
        'false'
    ]).optional(),
    root_folder: z.enum([
        'true',
        'false',
        'unset'
    ]).optional(),
    rename: z.string().optional(),
    upLimit: z.coerce.bigint().optional(),
    dlLimit: z.coerce.bigint().optional(),
    ratioLimit: z.number().optional(),
    seedingTimeLimit: z.coerce.bigint().optional(),
    autoTMM: z.boolean().optional(),
    sequentialDownload: z.enum([
        'true',
        'false'
    ]).optional(),
    firstLastPiecePrio: z.enum([
        'true',
        'false'
    ]).optional()
}));

export const zAddTorrentsFiles = z.object({
    torrents: z.array(z.string())
}).merge(z.object({
    savepath: z.string().optional(),
    cookie: z.string().optional(),
    category: z.string().optional(),
    tags: z.array(z.string()).optional(),
    skip_checking: z.enum([
        'true',
        'false'
    ]).optional(),
    paused: z.enum([
        'true',
        'false'
    ]).optional(),
    root_folder: z.enum([
        'true',
        'false',
        'unset'
    ]).optional(),
    rename: z.string().optional(),
    upLimit: z.coerce.bigint().optional(),
    dlLimit: z.coerce.bigint().optional(),
    ratioLimit: z.number().optional(),
    seedingTimeLimit: z.coerce.bigint().optional(),
    autoTMM: z.boolean().optional(),
    sequentialDownload: z.enum([
        'true',
        'false'
    ]).optional(),
    firstLastPiecePrio: z.enum([
        'true',
        'false'
    ]).optional()
}));

export const zAddTorrentsCommon = z.object({
    savepath: z.string().optional(),
    cookie: z.string().optional(),
    category: z.string().optional(),
    tags: z.array(z.string()).optional(),
    skip_checking: z.enum([
        'true',
        'false'
    ]).optional(),
    paused: z.enum([
        'true',
        'false'
    ]).optional(),
    root_folder: z.enum([
        'true',
        'false',
        'unset'
    ]).optional(),
    rename: z.string().optional(),
    upLimit: z.coerce.bigint().optional(),
    dlLimit: z.coerce.bigint().optional(),
    ratioLimit: z.number().optional(),
    seedingTimeLimit: z.coerce.bigint().optional(),
    autoTMM: z.boolean().optional(),
    sequentialDownload: z.enum([
        'true',
        'false'
    ]).optional(),
    firstLastPiecePrio: z.enum([
        'true',
        'false'
    ]).optional()
});

export const zTorrentsLimit = z.object({});

export const zSetTorrentsLimit = zHashes.merge(z.object({
    limit: z.coerce.bigint()
}));

export const zTorrentsCategory = z.object({
    name: z.string().optional(),
    savePath: z.string().optional()
});

export const zCategory = z.object({
    category: z.string(),
    savePath: z.string()
});

export const zTorrentsTags = zHashes.merge(z.object({
    tags: z.array(z.string())
}));

export const zSetTorrentsValue = zHashes.merge(z.object({
    value: z.boolean().default(false)
}));

export const zRenameTorrentFiles = z.object({
    hash: z.string(),
    oldPath: z.string(),
    newPath: z.string()
});

export const zRssRuleDef = z.object({
    enabled: z.boolean().optional(),
    mustContain: z.string().optional(),
    mustNotContain: z.string().optional(),
    useRegex: z.boolean().optional(),
    episodeFilter: z.string().optional(),
    smartFilter: z.boolean().optional(),
    previouslyMatchedEpisodes: z.array(z.coerce.bigint()).optional(),
    affectedFeeds: z.array(z.string()).optional(),
    ignoreDays: z.number().optional(),
    lastMatch: z.string().optional(),
    addPaused: z.boolean().optional(),
    assignedCategory: z.string().optional(),
    savePath: z.string().optional()
});

export const zSearchJob = z.object({
    id: z.number().optional()
});

export const zSearchJobStatus = zSearchJob.merge(z.object({
    status: z.enum([
        'Running',
        'Stopped'
    ]).optional(),
    total: z.number().optional()
}));

export const zSearchResult = z.object({
    descrLink: z.string().optional(),
    fileName: z.string().optional(),
    fileSize: z.number().optional(),
    fileUrl: z.string().optional(),
    nbLeechers: z.number().optional(),
    nbSeeders: z.number().optional(),
    siteUrl: z.string().optional()
});

export const zSearchResults = z.object({
    results: z.array(zSearchResult).optional(),
    status: z.enum([
        'Running',
        'Stopped'
    ]).optional(),
    total: z.number().optional()
});

export const zSearchPlugin = z.object({
    enabled: z.boolean().optional(),
    fullName: z.string().optional(),
    name: z.string().optional(),
    supportedCategories: z.array(z.object({
        id: z.string().optional(),
        name: z.string().optional()
    })).optional(),
    url: z.string().optional(),
    version: z.string().optional()
});

export const zAuthLoginPostResponse = z.string();

export const zAppVersionGetResponse = z.string();

export const zAppWebapiVersionGetResponse = z.string();

export const zAppBuildInfoGetResponse = zBuildInfo;

export const zAppPreferencesGetResponse = zPreferences;

export const zAppDefaultSavePathGetResponse = z.string();

export const zLogMainPostResponse = z.array(zMainLog);

export const zLogPeersPostResponse = z.array(zPeersLog);

export const zSyncMaindataPostResponse = zMainData;

export const zSyncTorrentPeersPostResponse = zTorrentPeers;

export const zTransferInfoGetResponse = zTransferInfo;

export const zTransferSpeedLimitsModeGetResponse = z.unknown();

export const zTransferDownloadLimitGetResponse = z.coerce.bigint();

export const zTransferUploadLimitGetResponse = z.coerce.bigint();

export const zTorrentsInfoPostResponse = z.array(zTorrentInfo);

export const zTorrentsPropertiesPostResponse = zTorrentsProperties;

export const zTorrentsTrackersPostResponse = z.array(zTorrentsTrackers);

export const zTorrentWebseedsPostResponse = z.array(zTorrentsWebseeds);

export const zTorrentsFilesPostResponse = z.array(zTorrentsFiles);

export const zTorrentsPieceStatesPostResponse = z.array(z.unknown());

export const zTorrentsPieceHashesPostResponse = z.array(z.string());

export const zTorrentsDownloadLimitPostResponse = zTorrentsLimit;

export const zTorrentsUploadLimitPostResponse = zTorrentsLimit;

export const zTorrentsCategoriesGetResponse = z.object({});

export const zTorrentsTagsGetResponse = z.array(z.string());

export const zRssItemsPostResponse = z.object({});

export const zRssRulesGetResponse = z.object({});

export const zRssMatchingArticlesPostResponse = z.object({});

export const zSearchStartPostResponse = zSearchJob;

export const zSearchStatusPostResponse = z.array(zSearchJobStatus);

export const zSearchResultsPostResponse = zSearchResults;

export const zSearchPluginsGetResponse = z.array(zSearchPlugin);